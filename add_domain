#!/bin/bash
#-------------------------------------------------------------------------------
#
# add_domain <local-domain>
#
#-------------------------------------------------------------------------------
# Properties

# Get the directory of this command.

CMD_NAME=`basename $0`
INIT_DIR=`which $CMD_NAME`

if [ ! "$INIT_DIR" ]
then
  CMD_NAME=`readlink -f $0`

  cd `dirname $CMD_NAME`
  INIT_DIR=`pwd`

else
  INIT_DIR=`readlink -f $INIT_DIR`
  INIT_DIR=`dirname $INIT_DIR`
fi

OVERRIDE_DIR="$INIT_DIR/overrides"

DRUPAL_REPOSITORY="git://repo.collectivecolors.com/drupal/pressflow.git"

SUBMODULE_FILE="$OVERRIDE_DIR/.gitmodules"

ADMIN_EMAIL=''

GENERATE_UNSECURE='1'
UNSECURE_PORT=80

GENERATE_SECURE='1'
GENERATE_CERTIFICATE='1'
SECURE_PORT=443

DB_ROOT_NAME='root'
DB_NAME=''
DB_USER=''


HELP="
The add_domain command creates a virtual host, database, and Drupal site for a domain.

This script is composed of the add_vhost, add_db, and add_site commands.  These can be used separately as well if you are migrating a site.

--------------------------------------------------------------------------------

 Developed by Adrian Webb of http://collectivecolors.com
 Licensed under GPL v2

 See the project page at:  http://github.com/collectivecolors/site-admin-desktop
 Report issues here:       http://github.com/collectivecolors/site-admin-desktop/issues

--------------------------------------------------------------------------------
"

USAGE="
usage: add_domain [ --help ]                       # Show usage information
                  ----------------------------------------------------------------
                  [ --override-dir <dir> ]         # Directory that contains server overrides
                                                   # Defaults to <cmd-dir>/overrides
                  --------------------------------------------------------------
                  [ --email <admin-email> ]        # Administrator email.
                                                   # Defaults to value of global \$WEBSERVER_ADMIN_EMAIL
                  --------------------------------------------------------------
                  [ --secure ]                     # Only generate HTTPS host
                                                   # Both HTTP and HTTPS vhosts are genenerated by default
                  --------------------------------------------------------------
                  [ --secure-port <port> ]         # HTTPS port for this host
                                                   # Defaults to port 443
                  --------------------------------------------------------------
                  [ --no-crt ]                     # Do not generate self signed certificate
                                                   # Certificate is generated by default
                  --------------------------------------------------------------
                  [ --unsecure ]                   # Only generate HTTP host
                                                   # Both HTTP and HTTPS vhosts are genenerated by default
                  --------------------------------------------------------------
                  [ --port <port> ]                # HTTP port for this host
                                                   # Defaults to port 80
                  --------------------------------------------------------------
                  [ --db-root <root-name> ]        # Root database name (run as)
                                                   # Defaults to "root"
                  --------------------------------------------------------------
                  [ --db-name <db-name> ]          # Database name to create
                                                   # (must be 64 characters or less)
                  --------------------------------------------------------------
                  [ --db-user <db-user> ]          # User with all privileges on this database
                                                   # (must be 16 characters or less)
                                                   # Defaults to <database>
                  --------------------------------------------------------------
                  [ --repo <drupal-repo> ]         # Drupal repository url
                                                   # Defaults to git://repo.collectivecolors.com/drupal/pressflow.git
                  --------------------------------------------------------------
                  [ --submodule-file <file-name> ] # Submodules to include in the Drupal installation by default.
                                                   # This file is basically a .gitmodules file.
                                                   # Defaults to $OVERRIDE_DIR/.gitmodules
                  --------------------------------------------------------------
                  <local-domain>                   # Domain name for this site
"


# Parse parameters

while test $# -ne 0
do
  case "$1" in

  --help)
    echo "$HELP"
    echo "$USAGE"
    exit 0;;
    
  --override-dir)
    if [ ! "$2" ] || [ ! -d "$2" ]
    then
      echo "Override directory option requires an existing directory name."
      echo "$USAGE"
      exit 1
    fi
    
    OVERRIDE_DIR="$2"
    shift;;
 
  --email)
    if [ ! "$2" ]
    then
      echo "Email option requires an email address."
      echo "$USAGE"
      exit 2
    fi

    ADMIN_EMAIL="$2"
    shift;;

  --port)
    if [ ! "$2" ]
    then
      echo "Port option requires a positive integer value."
      echo "$USAGE"
      exit 3
    fi

    UNSECURE_PORT="$2"
    shift;;

  --secure-port)
    if [ ! "$2" ]
    then
      echo "Secure port option requires a positive integer value."
      echo "$USAGE"
      exit 4
    fi

    SECURE_PORT="$2"
    shift;;

  --db-root)
    if [ ! "$2" ]
    then
      echo "Database root name option requires the root database user name."
      echo "$USAGE"
      exit 5
    fi

    DB_ROOT_NAME="$2"
    shift;;

  --db-name)
    if [ ! "$2" ]
    then
      echo "Database name option requires a name of no more than 64 characters."
      echo "$USAGE"
      exit 6
    fi

    DB_NAME="$2"
    shift;;

  --db-user)
    if [ ! "$2" ]
    then
      echo "Database user option requires a user name of no more than 16 characters."
      echo "$USAGE"
      exit 7
    fi

    DB_USER="$2"
    shift;;
         
  --repo)
    if [ ! "$2" ]
    then
      echo "Drupal repository must be a ssh url:"
      echo " |- writable: git@example.com:myrepo.git"
      echo " '- readonly: git://example.com/myrepo.git"
      echo "$USAGE"
      exit 8
    fi
    
    DRUPAL_REPOSITORY="$2"
    shift;;
  
  --submodule-file)
    if [ ! "$2" ] || [ ! -e "$2" ]
    then
      echo "You must specify a valid .gitmodules formatted file.  This file must already exist."
      echo "$USAGE"
      exit 9
    fi
    
    SUBMODULE_FILE="$2"
    shift;;

  --unsecure) GENERATE_SECURE='';;
  --secure) GENERATE_UNSECURE='';;
  --no-crt) GENERATE_CERTIFICATE='';;

  *) break;;
  esac
  shift
done


# Domain

DOMAIN_NAME=$1

if [ ! $DOMAIN_NAME ]
then
  echo "Domain name is required to setup a Drupal site."
  echo "$USAGE"
  exit 10
fi


# Administrator email

if [ ! $ADMIN_EMAIL ]
then
  ADMIN_EMAIL=$WEBSERVER_ADMIN_EMAIL # Look for global admin email.
fi

if [ ! $ADMIN_EMAIL ]
then
  echo "Administrator email is required to setup the Apache virtual host."
  echo "You can specify a global variable \$WEBSERVER_ADMIN_EMAIL to have this"
  echo "automatically set each time you execute this command."
  echo "$USAGE"
  exit 11
fi


# Database

if [ ! $DB_NAME ]
then
  $DB_NAME=$DOMAIN_NAME
fi
# MySQL only allows for a 64 character database name.
if [ ${DB_NAME:0:64} != $DB_NAME ]
then
  echo "Database name must be 64 characters or less in length."
  exit 12
fi

DB_NAME=${DB_NAME//./_} # No dots


# User

if [ ! $DB_USER ]
then
  DB_USER=$DB_NAME

# MySQL only allows for a 16 character user name.
elif [ ${DB_USER:0:16} != $DB_USER ]
then
  echo "Database user name must be 16 characters or less in length."
  exit 13
fi

DB_USER=${DB_USER//./_} # No dots


#-------------------------------------------------------------------------------
# Start

# Add site virtual host configurations.

VHOST_ARGS=''

# Administrative email
if [ $ADMIN_EMAIL ]
then
  VHOST_ARGS="$VHOST_ARGS --email $ADMIN_EMAIL"
fi

# Unsecure host configurations.
if [ ! $GENERATE_SECURE ]
then
  VHOST_ARGS="$VHOST_ARGS --unsecure" # Unsecure only.
fi
if [ $UNSECURE_PORT ]
then
  VHOST_ARGS="$VHOST_ARGS --port $UNSECURE_PORT"
fi

# Secure host configurations.
if [ ! $GENERATE_UNSECURE ]
then
  VHOST_ARGS="$VHOST_ARGS --secure" # Secure only.
fi
if [ $SECURE_PORT ]
then
  VHOST_ARGS="$VHOST_ARGS --secure-port $SECURE_PORT"
fi
if [ ! $GENERATE_CERTIFICATE ]
then
  VHOST_ARGS="$VHOST_ARGS --no-crt"
fi

# Host domain name.
VHOST_ARGS="$VHOST_ARGS $DOMAIN_NAME"

echo "Generating site virtual host for $DOMAIN_NAME"
echo "  add_vhost $VHOST_ARGS"

add_vhost $VHOST_ARGS || exit $((14 + $?)) # 24


# Create site database and database user.

DB_ARGS=''

# Root database user. (can create databases and users)
if [ $DB_ROOT_NAME ]
then
  DB_ARGS="$DB_ARGS --root $DB_ROOT_NAME"
fi

# Database name. (this is required)
DB_ARGS="$DB_ARGS $DB_NAME"

# Database user name.
if [ $DB_USER ]
then
  DB_USER="$DB_ARGS $DB_USER"
fi

echo "Creating site database and database user for $DOMAIN_NAME"
echo "  add_db $DB_ARGS"

add_db $DB_ARGS || exit $((38 + $?)) # 9


# Create Drupal site.

SITE_ARGS="--override-dir $OVERRIDE_DIR"

# Drupal repository.
if [ $DRUPAL_REPOSITORY ]
then
  SITE_ARGS="$SITE_ARGS --repo $DRUPAL_REPOSITORY"
fi

# Drupal submodule file.
if [ $SUBMODULE_FILE ]
then
  SITE_ARGS="$SITE_ARGS --submodule-file $SUBMODULE_FILE"
fi

# Drupal domain. (this is required)
SITE_ARGS="$SITE_ARGS --domain $DOMAIN_NAME"

echo "Creating Drupal site for $DOMAIN_NAME"
echo "  add_site $SITE_ARGS"

add_site $SITE_ARGS || exit $((45 + $?)) # 24
