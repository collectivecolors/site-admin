#!/bin/bash
#-------------------------------------------------------------------------------
#
# add_vhost <domain>
#
#-------------------------------------------------------------------------------
# Properties

HELP="
The add_vhost command creates virtual hosts for a specified domain.

This script can generate both HTTP and HTTPS virtual hosts along with a
self signed SSL certificate to help with initial setup of secure hosts.

It also creates site directories needed to host a site, such as www and logs
directories.

--------------------------------------------------------------------------------

 Developed by Adrian Webb of http://collectivecolors.com
 Licensed under GPL v2

 See the project page at:  http://github.com/collectivecolors/site-admin-desktop
 Report issues here:       http://github.com/collectivecolors/site-admin-desktop/issues

--------------------------------------------------------------------------------
"

USAGE="
usage: add_vhost [ -h | --help ]                 # Show usage information
                 ---------------------------------------------------------------
                 [ -e | --email <admin-email> ]  # Administrator email.
                                                 # Defaults to value of global \$WEBSERVER_ADMIN_EMAIL
                 ---------------------------------------------------------------
                 [ -d | --dest <dir> ]           # Destination directory
                                                 # Defaults to $HOME/Sites/<domain>
                 ---------------------------------------------------------------
                 [ -s | --secure ]               # Only generate HTTPS host
                                                 # Both HTTP and HTTPS vhosts are genenerated by default
                 ---------------------------------------------------------------
                 [ -o | --secure-port <port> ]   # HTTPS port for this host
                                                 # Defaults to port 443
                 ---------------------------------------------------------------
                 [ -n | --no-crt ]               # Do not generate self signed certificate
                                                 # Certificate is generated by default
                 ---------------------------------------------------------------
                 [ -u | --unsecure ]             # Only generate HTTP host
                                                 # Both HTTP and HTTPS vhosts are genenerated by default
                 ---------------------------------------------------------------
                 [ -p | --port <port> ]          # HTTP port for this host
                                                 # Defaults to port 80
                 ---------------------------------------------------------------
                 <domain>                        # Domain name for this host
"

ADMIN_EMAIL=''
DESTINATION=''

GENERATE_UNSECURE='1'
UNSECURE_PORT=80

GENERATE_SECURE='1'
GENERATE_CERTIFICATE='1'
SECURE_PORT=443


# Parse parameters

while test $# -ne 0
do
  case "$1" in

  -h|--help)
    echo "$HELP"
    echo "$USAGE"
    exit 0;;

  -e|--email)
    if [ ! "$2" ]
    then
      echo "Email option requires an email address."
      echo "$USAGE"
      exit 3
    fi

    ADMIN_EMAIL="$2"
    shift;;

  -d|--dest)
    if [ ! "$2" ]
    then
      echo "Destination option requires a directory path."
      echo "$USAGE"
      exit 4
    fi

    DESTINATION="$2"
    shift;;

  -p|--port)
    if [ ! "$2" ]
    then
      echo "Port option requires a positive integer value."
      echo "$USAGE"
      exit 5
    fi

    UNSECURE_PORT="$2"
    shift;;

  -o|--secure-port)
    if [ ! "$2" ]
    then
      echo "Secure port option requires a positive integer value."
      echo "$USAGE"
      exit 6
    fi

    SECURE_PORT="$2"
    shift;;

  -u|--unsecure) GENERATE_SECURE='';;
  -s|--secure) GENERATE_UNSECURE='';;
  -n|--no-crt) GENERATE_CERTIFICATE='';;
  *) break;;
  esac
  shift
done


# Domain

DOMAIN_NAME=$1

if [ ! $DOMAIN_NAME ]
then
  echo "Domain name is required to setup the Apache virtual host."
  echo "$USAGE"
  exit 1
fi


# Directories

if [ ! $DESTINATION ]
then
  DESTINATION="$HOME/Sites/$DOMAIN_NAME"
fi

SITE_DIR="$DESTINATION/www"
LOG_DIR="$DESTINATION/logs"


# Administrator email

if [ ! $ADMIN_EMAIL ]
then
  ADMIN_EMAIL=$WEBSERVER_ADMIN_EMAIL # Look for global admin email.
fi

if [ ! $ADMIN_EMAIL ]
then
  echo "Administrator email is required to setup the Apache virtual host."
  echo "You can specify a global variable \$WEBSERVER_ADMIN_EMAIL to have this"
  echo "automatically set each time you execute this command."
  echo "$USAGE"
  exit 2
fi


# Server certificate information

SSL_KEY="/etc/ssl/private/$DOMAIN_NAME.key"
SSL_CRT="/etc/ssl/certs/$DOMAIN_NAME.crt"

#echo "$DOMAIN_NAME"
#echo "$GENERATE_UNSECURE"
#echo "$UNSECURE_PORT"
#echo "$GENERATE_SECURE"
#echo "$SECURE_PORT"
#echo "$GENERATE_CERTIFICATE"
#echo "$DESTINATION"
#echo "$SITE_DIR"
#echo "$LOG_DIR"
#echo "$ADMIN_EMAIL"
#echo "$SSL_KEY"
#echo "$SSL_CRT"


#-------------------------------------------------------------------------------
# Start


if [ ! $GENERATE_UNSECURE ] && [ ! $GENERATE_SECURE ]
then
  echo "No Apache vhost configurations generated."
  exit 8
fi


# Create domain directories.

if [ ! -d $DESTINATION ]
then
  mkdir -p $DESTINATION || exit 9
  sudo chgrp www-data $DESTINATION || exit 10
  sudo chmod g+s $DESTINATION || exit 11
fi

if [ ! -d $SITE_DIR ]
then
  mkdir $SITE_DIR || exit 12
fi

if [ ! -d $LOG_DIR ]
then
  mkdir $LOG_DIR || exit 13
fi


cd /etc/apache2/sites-available || exit 14

if [ $GENERATE_UNSECURE ]
then
# Generate unsecure server vhost configuration file.

UNSECURE_VHOST="<VirtualHost *:$UNSECURE_PORT>

  # Server info

  ServerAdmin $ADMIN_EMAIL

  ServerName $DOMAIN_NAME
  DocumentRoot $SITE_DIR

  # Logging

  # Possible values include:
  #  [ debug | info | notice | warn | error | crit | alert | emerg ]
  LogLevel warn
  # RewriteLogLevel 9

  ErrorLog $LOG_DIR/error.log
  CustomLog $LOG_DIR/access.log combined
  # RewriteLog $LOG_DIR/rewrite.log

</VirtualHost>"

echo "Writing unsecured vhost for $DOMAIN_NAME"

echo "$UNSECURE_VHOST" | sudo tee $DOMAIN_NAME || exit 15


UNSECURE_VHOST_NAME="NameVirtualHost \*:$UNSECURE_PORT"

if ! grep -q "$UNSECURE_VHOST_NAME" /etc/apache2/apache2.conf
then
  echo "Saving name virtual host to Apache configuration."
  echo -e "\n$UNSECURE_VHOST_NAME" | sudo tee -a /etc/apache2/apache2.conf \
    > /dev/null || exit 16
fi

sudo a2ensite $DOMAIN_NAME || exit 17
fi

if [ $GENERATE_SECURE ]
then

if [ $GENERATE_CERTIFICATE ]
then
  # Generate self signed certificate ( to be replaced by one from a valid CA )

  KEY_DATA=`openssl genrsa 1024`

  echo "Generating a SSL private key."
  echo "$KEY_DATA" | sudo tee $SSL_KEY > /dev/null || exit 18

  sudo chmod 400 $SSL_KEY || exit 19

  echo "Generating a self signed SSL certificate."
  sudo openssl req -new -x509 -nodes -sha1 -days 365 -key $SSL_KEY \
    | sudo tee $SSL_CRT || exit 20
fi

# Generate secure server vhost configuration file.

SECURE_VHOST="<VirtualHost *:$SECURE_PORT>

  # Server info

  ServerAdmin $ADMIN_EMAIL

  ServerName $DOMAIN_NAME
  DocumentRoot $SITE_DIR

  SSLEngine on
  SSLOptions +StrictRequire

  SSLCertificateFile $SSL_CRT
  SSLCertificateKeyFile $SSL_KEY

  # Logging

  # Possible values include:
  #  [ debug | info | notice | warn | error | crit | alert | emerg ]
  LogLevel warn
  # RewriteLogLevel 9

  ErrorLog $LOG_DIR/error.log
  CustomLog $LOG_DIR/access.log combined
  # RewriteLog $LOG_DIR/rewrite.log

</VirtualHost>"

echo "Writing secured vhost for $DOMAIN_NAME"

echo "$SECURE_VHOST" | sudo tee https.$DOMAIN_NAME || exit 21


SECURE_VHOST_NAME="<IfModule mod_ssl.c>
  NameVirtualHost *:$SECURE_PORT
</IfModule>"

# TODO: Make this a better condition.  Will require multi line match, which
#       is something that grep can't do. (At least to my knowledge)
if ! grep -q "NameVirtualHost \*:$SECURE_PORT" /etc/apache2/apache2.conf
then
  echo "Saving name virtual host to Apache configuration."
  echo -e "\n$SECURE_VHOST_NAME" | sudo tee -a /etc/apache2/apache2.conf \
    > /dev/null || exit 22
fi

sudo a2ensite https.$DOMAIN_NAME || exit 23
fi

sudo /etc/init.d/apache2 reload || exit 24

echo ''
echo "You have successfully created a virtual host for the domain:"
echo ''
echo "$DOMAIN_NAME"
echo ''
echo "The document root for this domain is:"
echo ''
echo "$SITE_DIR"
