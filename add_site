#!/bin/bash
#-------------------------------------------------------------------------------
#
# add_site [ <dest-dir> ]
#
#-------------------------------------------------------------------------------
# Properties

# Get the directory of this command.

CMD_NAME=`basename $0`
INIT_DIR=`which $CMD_NAME`

if [ ! "$INIT_DIR" ]
then
  CMD_NAME=`readlink -f $0`

  cd `dirname $CMD_NAME`
  INIT_DIR=`pwd`

else
  INIT_DIR=`readlink -f $INIT_DIR`
  INIT_DIR=`dirname $INIT_DIR`
fi

OVERRIDE_DIR="$INIT_DIR/overrides"


DRUPAL_REPOSITORY="git://repo.collectivecolors.com/drupal/pressflow.git"

SUBMODULE_FILE="$OVERRIDE_DIR/.gitmodules"

DOMAIN_NAME=''
DESTINATION=''

HELP="
The add_site command creates and initializes a Drupal site.  This script also
accepts a file that lists various drupal projects and libraries to download.

You can specify which version of Drupal core you want, such as 6.14, or if you
do not specify a version the current recommended release will be created.  You
can also specify the target directory for the Drupal site.  If you do not
specify this, then the site is installed to the current directory.

--------------------------------------------------------------------------------

 Developed by Adrian Webb of http://collectivecolors.com
 Licensed under GPL v2

 See the project page at:  http://github.com/collectivecolors/site-admin
 Report issues here:       http://github.com/collectivecolors/site-admin/issues

--------------------------------------------------------------------------------
"

USAGE="
usage: add_site [ --help ]                             # Show usage information
                ----------------------------------------------------------------
                [ --override-dir <dir> ]               # Directory that contains server overrides
                                                       # Defaults to <cmd-dir>/overrides
                ----------------------------------------------------------------
                [ --repo <drupal-repo> ]               # Drupal repository url
                                                       # Defaults to git://repo.collectivecolors.com/drupal/pressflow.git
                --------------------------------------------------------------
                [ --submodule-file <file-name> ]       # Submodules to include in the Drupal installation by default.
                                                       # This file is basically a .gitmodules file.
                                                       # Defaults to $OVERRIDE_DIR/.gitmodules
                ----------------------------------------------------------------
                [ --domain <domain> ]          # Domain to use if this vhost is
                                               # in the following directory:
                                               # $HOME/Sites/<domain>
                ----------------------------------------------------------------
                [ <dest-dir> ]                         # Directory to put the site into.
                                                       # If not specified and --domain option
                                                       # is not set, the current directory 
                                                       # is used
"

                
# Parse parameters

while test $# -ne 0
do
	case "$1" in
	  
  --help)
    echo "$HELP"
    echo "$USAGE"
    exit 0;;
	
  --override-dir)
    if [ ! "$2" ] || [ ! -d "$2" ]
    then
      echo "Override directory option requires an existing directory name."
      echo "$USAGE"
      exit 1
    fi
    
    OVERRIDE_DIR="$2"
    shift;;
     
	--repo)
    if [ ! "$2" ]
    then
      echo "Drupal repository must be a ssh url:"
      echo " |- writable: git@example.com:myrepo.git"
      echo " '- readonly: git://example.com/myrepo.git"
      echo "$USAGE"
      exit 2
    fi
    
	  DRUPAL_REPOSITORY="$2"
    shift;;
	
	--submodule-file)
    if [ ! "$2" ] || [ ! -e "$2" ]
    then
      echo "You must specify a valid .gitmodules formatted file.  This file must already exist."
      echo "$USAGE"
      exit 3
    fi
    
		SUBMODULE_FILE="$2"
    shift;;
	
	--domain)
    if [ ! "$2" ]
    then
      echo "Domain option requires a domain name."
      echo "$USAGE"
      exit 4
    fi
    
    DOMAIN_NAME="$2"
    shift;;
	 
	*) break;;
	esac
	shift
done


# Site directory (defaults to current directory)

if [ $DOMAIN_NAME ]
then
  SITE_DIR="$HOME/Sites/$DOMAIN_NAME/www"
else
  SITE_DIR="$1"
fi

if [ ! $SITE_DIR -o $SITE_DIR = '.' ]
then
  SITE_DIR=$PWD
fi
if [ ! -d $SITE_DIR ]
then
  mkdir -p $SITE_DIR || exit 5
fi


#-------------------------------------------------------------------------------
# Start

# Move into the top level site directory.  Drush is context sensitive.

cd $SITE_DIR || exit 6


# Download Drupal into a subdirectory of the web directory.

git clone "$DRUPAL_REPOSITORY" . || exit 7

echo "Copying the Git post_update hook and setting execute permissions."
cp -f "$OVERRIDE_DIR/post-update" .git/hooks/post-update || exit 8
chmod 775 .git/hooks/post-update || exit 9


# Do a little post processing.

echo "Preparing the settings.php file for Drupal site installation."

cd $SITE_DIR || exit 10

mkdir -p sites/default
chmod g+s sites/default || exit 11
mkdir sites/default/files

if [ -f sites/default.settings.php ]
then
	cp -p sites/default.settings.php sites/default/default.settings.php || exit 12
  cp -p sites/default.settings.php sites/default/settings.php || exit 13
fi

chmod 744 sites/default/settings.php || exit 14


# Copy override configurations to the new Drupal site.

echo "Overriding the Apache .htaccess file."
cp -f "$OVERRIDE_DIR/.htaccess" .htaccess || exit 15

git add .htaccess || exit 16
git commit -m "Adding .htaccess override." || exit 17


echo "Setting up ignored files and directories."
cp -f "$OVERRIDE_DIR/.gitignore" .gitignore || exit 18

git add .gitignore || exit 19
git commit -m "Adding .gitignore override." || exit 20


# Add Git submodule projects to this site repository.

if [ "$SUBMODULE_FILE" -a "$SUBMODULE_FILE" != 'none' ]
then
	#echo "$SUBMODULE_FILE"
	IFS=$'\n'
	
  for module_name in $(egrep '\[.*\]\s*' "$SUBMODULE_FILE")
  do
  	#echo "$module_name"
    module_name=`echo "$module_name" | sed 's/^\s*\[//g' | sed 's/\].*$//g' | sed 's/\"//g' | sed 's/\s/./g'`    
    #echo "$module_name"
    
    module_path=`git config --file $SUBMODULE_FILE "${module_name}.path"`
    
    if [ ! $module_path ]
    then
      echo "Git submodule path is required: $module_name"
      exit 21
    fi
    
    module_url=`git config --file $SUBMODULE_FILE "${module_name}.url"`
    
    if [ ! $module_url ]
    then
      echo "Git submodule url is required: $module_name"
      exit 22
    fi
    
    git submodule add "$module_url" "$module_path" || exit 23
    git commit -m "Adding Git module $module_name from $module_url." || exit 24
  done  
fi

echo "Drupal site installed successfully."
